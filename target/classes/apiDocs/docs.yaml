openapi: 3.0.1
info:
  title: Monitoring API
  version: v1
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /monitoring/job:
    post:
      tags:
        - monitoring-job-controller
      summary: Create a new monitoring job
      operationId: setMonitoringJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringJobDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringJobDto'
    get:
      tags:
        - monitoring-job-controller
      summary: Get all monitoring jobs
      operationId: getMonitoringJob
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringJobDto'
  /monitoring/jobs:
    post:
      tags:
        - monitoring-job-controller
      summary: Create multiple monitoring jobs
      operationId: setMonitoringJobs
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MonitoringJobDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringJobDto'
    delete:
      tags:
        - monitoring-job-controller
      summary: Delete all monitoring jobs
      operationId: deleteMonitoringJobs
      responses:
        '200':
          description: Successful operation
  /monitoring/job/{jobId}:
    delete:
      tags:
        - monitoring-job-controller
      summary: Delete a monitoring job by ID
      operationId: deleteMonitoringJob
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
  /monitoring/result:
    get:
      tags:
        - monitoring-result-controller
      summary: Get all monitoring results
      operationId: getMonitoringResults
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringResultDto'
    parameters:
      - name: status
        in: query
        description: Status code of the monitoring results to filter
        required: false
        schema:
          type: integer
      - name: jobId
        in: query
        description: Job ID to filter monitoring results by
        required: false
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        description: ID of the monitoring result to retrieve
        required: false
        schema:
          type: string
          format: uuid
      - name: startDate
        in: query
        description: Start date for filtering monitoring results
        required: false
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: End date for filtering monitoring results
        required: false
        schema:
          type: string
          format: date-time
      - name: responseTime
        in: query
        description: Minimum response time for filtering monitoring results
        required: false
        schema:
          type: integer
  /rate:
    get:
      tags:
        - monitoring-result-controller
      summary: Get success rate of monitoring results
      operationId: getMonitoringResultsSuccessRate
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: number
  /monitoring/result/{status}:
    get:
      tags:
        - monitoring-result-controller
      summary: Get monitoring results by status
      operationId: getMonitoringResultsByStatus
      parameters:
        - name: status
          in: path
          description: Status code of the monitoring results to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringResultDto'
  /monitoring/result/job/{jobId}:
    get:
      tags:
        - monitoring-result-controller
      summary: Get monitoring results by job ID
      operationId: getMonitoringResultsByJobId
      parameters:
        - name: jobId
          in: path
          description: Job ID to filter monitoring results by
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringResultDto'
  /monitoring/result/id/{id}:
    get:
      tags:
        - monitoring-result-controller
      summary: Get monitoring results by ID
      operationId: getMonitoringResultsById
      parameters:
        - name: id
          in: path
          description: ID to filter monitoring results by
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringResultDto'

  /monitoring/result/{startDate}/{endDate}:
    get:
      tags:
        - monitoring-result-controller
      summary: Get monitoring results between two dates
      operationId: getMonitoringResultsBetweenDates
      parameters:
        - name: startDate
          in: path
          description: Start date for filtering monitoring results
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: path
          description: End date for filtering monitoring results
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringResultDto'
  /monitoring/result/{responseTime}:
    get:
      tags:
        - monitoring-result-controller
      summary: Get monitoring results by response time greater than a value
      operationId: getMonitoringResultsByResponseTime
      parameters:
        - name: responseTime
          in: path
          description: Minimum response time for filtering monitoring results
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitoringResultDto'
components:
  schemas:
    MonitoringJobDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
        interval:
          type: integer
    MonitoringResultDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: integer
        message:
          type: string
